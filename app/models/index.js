// // Index.js
// // (auto-generated by the Sequelize CLI)
// // =====================================
// // consult the activities in 15.2 for a run down of how this file functions.
// 'use strict';
// var fs        = require('fs');
// var path      = require('path');
// var Sequelize = require('sequelize');
// var basename  = path.basename(module.filename);
// var config    = require(__dirname + '/../../config/config.json')['production'];
// var db        = {};
// if (process.env.JAWSDB_URL) {
//   var sequelize = new Sequelize(process.env.JAWSDB_URL);
//   console.log('process.env was used.');
// } else {
//   var sequelize = new Sequelize('mysql://kylp05rvczac6xpz:dgtkclik3rrcp92b@yhrz9vns005e0734.cbetxkdyhwsb.us-east-1.rds.amazonaws.com:3306/nt4qw9pdp4iem3fm');
//   console.log('local credential was used.');
//   sequelize
//     .authenticate()
//     .then(() => {
//        console.log('Connection has been established successfully.');
//      })
//      .catch(err => {
//        console.error('Unable to connect to the database:', err);
//      });
// }
// fs
//   .readdirSync(__dirname)
//   .filter(function(file) {
//     return (file.indexOf('.') !== 0) && (file !== basename) && (file.slice(-3) === '.js');
//   })
//   .forEach(function(file) {
//     var model = sequelize['import'](path.join(__dirname, file));
//     db[model.name] = model;
//   });
// Object.keys(db).forEach(function(modelName) {
//   if (db[modelName].associate) {
//     db[modelName].associate(db);
//   }
// });
// db.sequelize = sequelize;
// db.Sequelize = Sequelize;
// module.exports = db;

if (!global.hasOwnProperty('db')) {
  var Sequelize = require('sequelize');
  var sequelize = null;

  if (process.env.JAWSDB_URL) {
    // the application is executed on Heroku ... use the postgres database
    sequelize = new Sequelize(process.env.JAWSDB_URL);
      console.log('process.env was used.');
  } else {
    // the application is executed on the local machine ... use mysql
    sequelize = new Sequelize('mysql://kylp05rvczac6xpz:dgtkclik3rrcp92b@yhrz9vns005e0734.cbetxkdyhwsb.us-east-1.rds.amazonaws.com:3306/nt4qw9pdp4iem3fm');
      console.log('local credential was used.');
  }
  sequelize
    .authenticate()
    .then(() => {
       console.log('Connection has been established successfully.');
     })
     .catch(err => {
       console.error('Unable to connect to the database:', err);
     });

    global.db = {
      Sequelize: Sequelize,
      sequelize: sequelize,
      User:      sequelize.import(__dirname + '/users'),
      Recipe:    sequelize.import(__dirname + '/recipes')
    }
  /*
    Associations can be defined here. E.g. like this:
    global.db.User.hasMany(global.db.SomethingElse)
  */
}
module.exports = global.db
